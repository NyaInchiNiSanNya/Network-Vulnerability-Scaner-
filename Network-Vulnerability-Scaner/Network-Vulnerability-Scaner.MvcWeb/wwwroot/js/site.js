document.addEventListener('DOMContentLoaded', function () {

    let vulnRequestElements = document.querySelectorAll('#vulnRequest');


    vulnRequestElements.forEach(function (element) {
        element.addEventListener('click', function (event) {
            GetVulnsFromNvdByPortAsync(event);
        });
    });

    let scriptRequestElements = document.querySelectorAll('#scriptRequest');


    scriptRequestElements.forEach(function (element) {
        element.addEventListener('click', function (event) {
            GetScriptsAsync(event);
        });
    });


    let vulnRequestOs = document.querySelectorAll('#port-state');

    vulnRequestElements.forEach(function (element) {
        if (element.textContent.includes('close')) {
            element.style.color = 'red';
        }

        if (element.textContent.includes('open')) {
            element.style.color = 'green';
        }

        if (element.textContent.includes('filtered')) {
            element.style.color = 'darkGoldenRod';
        }
    });
});

async function GetVulnsFromNvdByPortAsync(event) {

    let version = event.target.getAttribute("version");

    let service = event.target.getAttribute("service");

    let portData = {
        version: version,
        service: service
    };

    let resp = await fetch('https://localhost:7143/Scan/GetVulnerability', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(portData)
    });

    if (resp.ok) {
        let jsonText = await resp.text(); 

        var vulns = JSON.parse(jsonText); 

        document.getElementById("workPlaceLeftTop").innerHTML = "";

        document.getElementById("workPlaceLeftMid").innerHTML = "";

        document.getElementById("workPlaceLeftBottom").innerHTML = "";

        document.getElementById("leftBack").hidden = true;

        document.getElementById("workplaceL").hidden = false;

        for (let i = 0; i < vulns.nvdReport.length; i++) {

            let report = vulns.nvdReport[i];

            document.getElementById("workPlaceLeftTop").innerHTML += '<span style="font-weight: bold;">' + report.nvdId + '</span>';

            document.getElementById("workPlaceLeftTop").innerHTML += "<br>";

            document.getElementById("workPlaceLeftTop").innerHTML += report.description;

            document.getElementById("workPlaceLeftTop").innerHTML += "<br>";

            document.getElementById("workPlaceLeftTop").innerHTML += '<a href="' + report.reference + '" target="_blank">' + report.reference + '</a>';

            document.getElementById("workPlaceLeftTop").innerHTML += "<br>";

            document.getElementById("workPlaceLeftTop").innerHTML += "<br>";
        }

        for (let i = 0; i < vulns.exploitDbReport.length; i++) {

            let report = vulns.exploitDbReport[i];

            document.getElementById("workPlaceLeftMid").innerHTML += '<span style="font-weight: bold;">' + report.exploitTitle + '</span>' + '<br>' + report.fileType + '<br>' + '<a href="' + report.url + '" target="_blank">' + "Описание" + '</a>' + '<a href="' + report.downloadExp + '" target="_blank">' + "Скачать" + '</a>'+'<br>' +'</br>';

        }

        for (let i = 0; i < vulns.gitVulnReport.length; i++) {

            let report = vulns.gitVulnReport[i];

            document.getElementById("workPlaceLeftBottom").innerHTML += '<span style="font-weight: bold;">' + report.repName + '</span>';

            document.getElementById("workPlaceLeftBottom").innerHTML += report.createdDate;

            document.getElementById("workPlaceLeftBottom").innerHTML += "<br>";

            document.getElementById("workPlaceLeftBottom").innerHTML += 'Язык:' + report.language + ';'

            document.getElementById("workPlaceLeftBottom").innerHTML += "<br>";

            document.getElementById("workPlaceLeftBottom").innerHTML += '<a href="' + report.url + '" target="_blank">' + report.url + '</a>';

            document.getElementById("workPlaceLeftBottom").innerHTML += "<br>";

            document.getElementById("workPlaceLeftBottom").innerHTML += "<br>";
        }
    } else {

        console.error('Ошибка при выполнении запроса:', resp.status);
    }

}

async function GetScriptsAsync(event) {

    let ip = event.target.getAttribute("ip");

    let port = event.target.getAttribute("port");

    let portData = {
        ip: ip,
        port: port
    };

    let resp = await fetch('https://localhost:7143/Scan/GetScripts', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(portData)
    });

    if (resp.ok) {
        document.getElementById("leftBack").hidden = true;
        document.getElementById("workplaceLScripts").hidden = false;

        let jsonText = await resp.text();
        let hostPortDescElement = document.getElementById('HostPortDesc');
        hostPortDescElement.textContent = `IP: ${ip}, Порт: ${port}`;

        var scripts = JSON.parse(jsonText);
        let scriptContainer = document.getElementById('scriptContainer');

        // Очищаем контейнер, если в нем уже есть элементы
        scriptContainer.innerHTML = '';

        // Создаем элементы HTML для каждого скрипта
        scripts.forEach(script => {
            // Создаем контейнер для скрипта
            let scriptDiv = document.createElement('div');
            scriptDiv.className = 'scriptItem';

            // Создаем чекбокс для выбора скрипта
            let checkbox = document.createElement('input');
            checkbox.type = 'checkbox';
            checkbox.name = 'scripts';
            checkbox.value = script.name;

            // Создаем метку для отображения названия скрипта
            let labelName = document.createElement('label');
            labelName.textContent = script.name;

            // Добавляем чекбокс и метку в контейнер скрипта
            scriptDiv.appendChild(checkbox);
            scriptDiv.appendChild(labelName);

            // Добавляем контейнер скрипта в основной контейнер
            scriptContainer.appendChild(scriptDiv);
        });

        let sendScriptsButton = document.getElementById('sendScriptsButton');

        sendScriptsButton.addEventListener('click', function () {
            sendSelectedScripts(ip, port);
        });
    }
}
function sendSelectedScripts(ip, service) {
    let selectedScripts = Array.from(document.querySelectorAll('input[name="scripts"]:checked'))
        .map(checkbox => checkbox.value);

    // Добавляем IP и сервис к выбранным скриптам
    let scriptsData = {
        ip: ip,
        service: service,
        selectedScripts: selectedScripts
    };

    // Отправляем выбранные скрипты на сервер
    // Можно использовать fetch или другой метод для отправки данных
    console.log('Данные с IP и сервисом:', scriptsData);
}
