using AutoMapper;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Network_Vulnerability_Scaner.Application.Interfaces;
using Network_Vulnerability_Scaner.Application.Models.Dto;
using Network_Vulnerability_Scaner.Application.Models.Requests_Responses;
using Network_Vulnerability_Scaner.Application.ServiceFactory;

namespace Network_Vulnerability_Scaner.Controllers
{
    [Route("ScanController")]
    [ApiController]
    public class ScanController : ControllerBase
    {
        private readonly IServiceFactory _serviceFactory;

        public ScanController(IServiceFactory ServiceFactory)
        {
            _serviceFactory = ServiceFactory ?? throw new NullReferenceException(nameof(ServiceFactory));
        }

        [HttpPost]
        public async Task<IActionResult> Scanning([FromBody] NetworkToScanRequest request)
        {

            var validate = await _serviceFactory.CreateScanRequestValidator().ValidateAsync(request);

            if (validate.IsValid)
            {
                await _serviceFactory.CreateScanService()
                    .Scanner(_serviceFactory.CreateMapperService().
                        Map<NetworkToScanDto>(request));
                
                return Ok();
            }

            return BadRequest(validate.Errors);
        } 
    }
}
