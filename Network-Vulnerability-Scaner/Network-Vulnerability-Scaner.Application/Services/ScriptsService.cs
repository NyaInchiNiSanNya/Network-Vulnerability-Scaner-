using Network_Vulnerability_Scaner.Application.Interfaces;
using Network_Vulnerability_Scaner.Application.Interfaces.Repositories;
using Network_Vulnerability_Scaner.Application.Models.Dto;
using Network_Vulnerability_Scaner.Application.ServiceFactory;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Network_Vulnerability_Scaner.Application.Services
{
    public class ScriptsService : IScriptsService
    {
        private readonly IServiceFactory _serviceFactory;

        public ScriptsService(IServiceFactory serviceFactory)
        {
            _serviceFactory = serviceFactory ?? throw new NullReferenceException(nameof(ServiceFactory));

        }

        public async Task<IEnumerable<ScriptDto>> GetAllScriptsAsync()
        {
            var scripts = await _serviceFactory.CreateScriptsSearchService().GetAllScriptsAsync();

            var scriptsDto = _serviceFactory.CreateMapperService().Map<List<ScriptDto>>(scripts);

            return scriptsDto;
        }

        public Task<IEnumerable<ScriptDto>> GetScriptsByServiceAsync(string serviceName)
        {
            throw new NotImplementedException();
        }
    }
}
