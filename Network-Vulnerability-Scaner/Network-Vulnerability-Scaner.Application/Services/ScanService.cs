using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Network_Vulnerability_Scaner.Application.Interfaces;
using Network_Vulnerability_Scaner.Application.Models.Dto;
using Network_Vulnerability_Scaner.Application.ServiceFactory;
using Network_Vulnerability_Scaner.Domain.Entities;

namespace Network_Vulnerability_Scaner.Application.Services
{
    public class ScanService: IScanService
    {
        private readonly IServiceFactory _serviceFactory;

        public ScanService(IServiceFactory ServiceFactory)
        {
            _serviceFactory = ServiceFactory ?? throw new NullReferenceException(nameof(ServiceFactory));
        }

        public async Task<ScanResultDto> Scanner(NetworkToScanDto networkToScanDto)
        {
            if (!(await _serviceFactory.CreateScanDtoValidator()
                    .ValidateAsync(networkToScanDto)).IsValid)
            {
                throw new ArgumentException(nameof(networkToScanDto));
            }

            await _serviceFactory.CreateScanMethodsService()
                .GetActiveHostsAsync(_serviceFactory.CreateMapperService()
                    .Map<NetworkConfiguration>(networkToScanDto));

            throw new NotImplementedException();
        }
    }
}
