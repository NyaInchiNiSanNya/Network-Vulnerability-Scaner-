using AutoMapper;
using Network_Vulnerability_Scaner.Application.Models.Dto;
using Network_Vulnerability_Scaner.Domain.Entities;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Network_Vulnerability_Scaner.Application.Models.Requests_Responses
{
    public class ScanReportResponse
    {
        public String ReportId { get; set; }

        public DateTime StartTime { get; set; }

        public NetworkToScanDto NetworkScanConfiguration { get; set; }

        public String ActiveHostsNmapReport { get; set; }

        public List<HostResponse> ActiveHosts { get; set; }


        public class Map : Profile
        {
            public Map()
            {
                CreateMap<ScanReportDto, ScanReportResponse>()
                    .ReverseMap();
            }

        }

    }

    public class NetworkScanConfigurationResponse
    {
        public String Ip { get; set; }
        public List<Int32>? Ports { get; set; }
        public Boolean Tcp { get; set; }
        public String TcpScanMethod { get; set; }
        public Boolean Udp { get; set; }

        public class Map : Profile
        {
            public Map()
            {
                CreateMap<NetworkToScanDto, NetworkScanConfigurationResponse>()
                    .ReverseMap();
            }

        }
    }

    public class PortResponse
    {
        public Int32 PortNumber { get; set; }
        public String Protocol { get; set; }
        public String Service { get; set; }
        public String State { get; set; }
        public String Version { get; set; }
        public List<ConfigurationCheckResponse> ConfigurationCheck { get; set; }

        public class Map : Profile
        {
            public Map()
            {
                CreateMap<PortDto, PortResponse>()
                    .ReverseMap();
            }

        }
    }

    public class ConfigurationCheckResponse
    {
        public String CheckName { get; set; }
        public String Report { get; set; }

        public class Map : Profile
        {
            public Map()
            {
                CreateMap<ConfigurationCheckDto, ConfigurationCheckResponse>()
                    .ReverseMap();

            }

        }
    }

    public class HostResponse
    {
        public String Ip { get; set; }
        public String? MAC { get; set; }
        public String? OS { get; set; }
        public DateTime PortScanStartTime { get; set; }
        public String AcivePortsNmapReport { get; set; }

        public List<PortResponse>? OpenPorts { get; set; }

        public class Map : Profile
        {
            public Map()
            {
                CreateMap<HostDto, HostResponse>()
                    .ReverseMap();
            }

        }
    }


}

