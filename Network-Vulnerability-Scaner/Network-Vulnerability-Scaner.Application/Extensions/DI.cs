using Microsoft.Extensions.DependencyInjection;
using System.Reflection;
using FluentValidation;
using Network_Vulnerability_Scaner.Application.Interfaces;
using Network_Vulnerability_Scaner.Application.ServiceFactory;
using Network_Vulnerability_Scaner.Application.Services;
using Network_Vulnerability_Scaner.Domain.DI;
using Network_Vulnerability_Scaner.Domain.Interfaces;
using Network_Vulnerability_Scaner.Domain.Services;

namespace Network_Vulnerability_Scaner.Application.Extensions
{
    public static class DependencyInjection
    {
        public static IServiceCollection AddApplicationServices(this IServiceCollection services)
        {
            services.AddAutoMapper(Assembly.GetExecutingAssembly());

            services.AddValidatorsFromAssembly(Assembly.GetExecutingAssembly());

            services.AddScoped<IServiceFactory, ServiceFactory.ServiceFactory>();

            services.AddScoped<IScanService, ScanService>();

            services.AddDomainServices();

            return services;
        }
    }
}
