using AutoMapper;
using FluentValidation;
using Network_Vulnerability_Scaner.Application.Models.Requests_Responses;
using Network_Vulnerability_Scaner.Application.Interfaces;
using Network_Vulnerability_Scaner.Application.Models.Dto;
using Network_Vulnerability_Scaner.Domain.Interfaces;
using Network_Vulnerability_Scaner.Domain.Services;
using Network_Vulnerability_Scaner.Application.Validators;
using Network_Vulnerability_Scaner.Domain.Entities;

namespace Network_Vulnerability_Scaner.Application.ServiceFactory
{
    public interface IServiceFactory
    {
        IMapper CreateMapperService();
        IScanService CreateScanService();
        IVulnSearchService CreateVulnSearchService();
        IReportService CreateReportService();
        
        IValidator<NetworkToScanRequest> CreateScanRequestValidator();
        IValidator<GetVulnerabilityRequest> CreateVulnerabilityRequestValidator();
        
        internal IValidator<NetworkToScanDto> CreateScanDtoValidator();
        internal IValidator<dataForVulnsSearchDto> CreateDataForVulnDtoValidator();
        internal IScanMethodsService CreateScanMethodsService();
        internal IVulnSearchDomainService CreateVulnSearchDomainService();
        internal IValidator<PortDto> CreatePortDtoValidator();
    }
}
