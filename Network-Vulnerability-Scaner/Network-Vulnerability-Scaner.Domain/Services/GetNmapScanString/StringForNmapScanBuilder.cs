using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Network_Vulnerability_Scaner.Domain.Services.GetNmapScanString
{
    internal abstract class ScanStringBuilder
    {
        protected async Task<StringBuilder> ScanHostsWithoutPortsAsync(StringBuilder scanString)
        {
            return scanString.Insert(0, "-sn ");
        }

        protected  async Task<StringBuilder> AddSynMethodScanAsync(StringBuilder scanString)
        {
            return scanString.Insert(0, "-sT ");
        }

        protected  async Task<StringBuilder> AddFinMethodScanAsync(StringBuilder scanString)
        {
            return scanString.Insert(0, "-sF ");
        }

        protected async Task<StringBuilder> AddXmasMethodScanAsync(StringBuilder scanString)
        {
            return scanString.Insert(0, "-sX ");
        }
        
        protected async Task<StringBuilder> AddUdpMethodScanAsync(StringBuilder scanString)
        {
            return scanString.Insert(0, "-sU ");
        }

        protected async Task<StringBuilder> AddSpecificPortScanAsync(StringBuilder scanString)
        {
            return scanString.Append("-p ");
        }

        protected async Task<StringBuilder> AddPortVersionScanAsync(StringBuilder scanString)
        {
            return scanString.Append("-A ");
        }

        protected async Task<StringBuilder> AddSpecificTcpPortsAsync(StringBuilder scanString
            , IEnumerable<Int32> ports)
        {
            scanString.Append("T:");

            foreach (var port in ports)
            {
                scanString.Append(Convert.ToString(port)+",");
            }

            return scanString;
        }

        protected async Task<StringBuilder> AddSpecificUdpPortsAsync(StringBuilder scanString
            , IEnumerable<Int32> ports)
        {
            scanString.Append("U:");

            foreach (var port in ports)
            {
                scanString.Append(Convert.ToString(port) + ",");
            }

            return scanString;
        }

    }
}
