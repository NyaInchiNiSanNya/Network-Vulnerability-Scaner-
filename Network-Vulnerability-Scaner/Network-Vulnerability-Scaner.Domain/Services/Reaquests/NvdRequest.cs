using System.Data;
using Network_Vulnerability_Scaner.Domain.Entities;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using RestSharp;

namespace Network_Vulnerability_Scaner.Domain.Services.Reaquests
{
    internal class NvdRequest
    {
        internal async Task<List<NvdVulnerability>> RequestToNvd(String requestString)
        {

            if (String.IsNullOrEmpty(requestString))
            {
                throw new ArgumentException();
            }

            var client = new RestClient("https://services.nvd.nist.gov/rest/json/cves/2.0");
            
            var restRequest = new RestRequest();

            restRequest.AddParameter("keywordSearch", requestString);
            
            RestResponse response = await client.ExecuteAsync(restRequest);

            var content = response.Content;

            dynamic data = JsonConvert.DeserializeObject(content);

            var result = new List<NvdVulnerability>();

            if (data != null)

                foreach (var parameter in data.vulnerabilities)
                {
                    var desc = String.Empty;

                    var refs = String.Empty;
                    
                    try
                    {  
                        desc = Convert.ToString(parameter.cve.descriptions[0].value);
                    }
                    catch (ArgumentOutOfRangeException)
                    {
                        
                    }

                    try
                    {
                        refs = Convert.ToString(parameter.cve.references[0].url);
                    }
                    catch (ArgumentOutOfRangeException)
                    {

                    }

                    var vulnerability = new NvdVulnerability()
                    {
                        NvdId = parameter.cve.id,
                        Description = desc,
                        Reference = refs
                    };

                    result.Add(vulnerability);
                }

            return result;
        }
    }
}
