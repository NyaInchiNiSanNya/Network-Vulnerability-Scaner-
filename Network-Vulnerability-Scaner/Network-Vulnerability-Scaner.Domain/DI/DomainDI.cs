using Microsoft.Extensions.DependencyInjection;
using Network_Vulnerability_Scaner.Domain.Interfaces;
using Network_Vulnerability_Scaner.Domain.Services;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Text;
using Network_Vulnerability_Scaner.Domain.Services.MissConfigurationServices;
using Network_Vulnerability_Scaner.Domain.Interfaces.Internal;
using Network_Vulnerability_Scaner.Domain.Services.GetNmapScanString;
using Network_Vulnerability_Scaner.Application.ServiceFactory;
using Network_Vulnerability_Scaner.Domain.Services.MissConfigurationServices;

namespace Network_Vulnerability_Scaner.Domain.DI
{
    public static class DomainDI
    {
        public static IServiceCollection AddDomainServices(this IServiceCollection services)
        {
            services.AddScoped<IScanMethodsService, ScanMethodsService>();
            services.AddScoped<IGetNmapScanStringService, GetNmapScanStringService>();
            services.AddScoped<INmapScanningService, NmapScanningService>();
            services.AddScoped<IReportReaderService, ReportReaderService>();
            services.AddScoped<IDomainServiceFactory, DomainServiceFactory>();
            services.AddScoped<IVulnSearchDomainService, VulnSearchDomainService>();
            services.AddScoped<IScriptsSearchService, ScriptsSearchService>();
            services.AddScoped<IFtpService, FTPservice>();
            services.AddScoped<ISmbService, SMBservice>();
            services.AddScoped<ILdapService, LdapService>();
            services.AddScoped<IRpcService, RPCservice>();
            services.AddScoped<IPortConfigurationCheckService, PortConfigurationCheckService>();

            return services;
        }
    }
}
